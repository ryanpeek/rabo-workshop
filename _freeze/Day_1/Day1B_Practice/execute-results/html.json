{
  "hash": "014bc98a425ab08fd076001beb840788",
  "result": {
    "markdown": "---\ntitle: \"Day 1B Practice\"\nformat:\n  html:\n    df-print: paged\n---\n\n\n![](../img/spreadsheets_2780E3.svg){.hero}\n\n## Question 1.\n\na) Create a character vector named `flavors` that contains the following strings and print it: \n    - Cookies & Cream\n    - Americone Dream (R)\n    - Bob Marley's 1 Love\nb) Use a function to calculate the number of strings in `flavors`.\nc) Use another function to calculate the number of characters in each string in `flavors`.\nd) Let R know how you feel about ice cream by using a function to either make all the characters in `flavors` uppercase (you LOVE ice cream) or lowercase (you don't love ice cream).\n\n<p><details>\n<summary>Click here for the answer key</summary>\n<blockquote>\n\n**Answer (a)**\n\n::: {.cell hash='Day1B_Practice_cache/html/unnamed-chunk-1_e4a6ca141595bfe22aa44e2f6c139314'}\n\n```{.r .cell-code}\nflavors <- c(\"Cookies & Cream\", \"Americone Dream (R)\", \"Bob Marley's 1 Love\")\nflavors\n#> [1] \"Cookies & Cream\"     \"Americone Dream (R)\" \"Bob Marley's 1 Love\"\n```\n:::\n\n\n**Answer (b)**\n\n::: {.cell hash='Day1B_Practice_cache/html/unnamed-chunk-2_16f6560d8b8cf9ebf1e086b128c7ee28'}\n\n```{.r .cell-code}\nlength(flavors)\n#> [1] 3\n```\n:::\n\n\n**Answer (c)**\n\n::: {.cell hash='Day1B_Practice_cache/html/unnamed-chunk-3_3d1e19d24a18eef85dc912ccc0b83ff7'}\n\n```{.r .cell-code}\nnchar(flavors)\n#> [1] 15 19 19\n```\n:::\n\n\n**Answer (d)**\n\n::: {.cell hash='Day1B_Practice_cache/html/unnamed-chunk-4_07f91c53de2e4e5917f88d49bf465c32'}\n\n```{.r .cell-code}\ntoupper(flavors)\n#> [1] \"COOKIES & CREAM\"     \"AMERICONE DREAM (R)\" \"BOB MARLEY'S 1 LOVE\"\ntolower(flavors)\n#> [1] \"cookies & cream\"     \"americone dream (r)\" \"bob marley's 1 love\"\n```\n:::\n\n\n</blockquote>\n</details></p>\n\n## Question 2.\n\nThe following table summarizes the season information for the eight seasons of AMC's *Breaking Bad* show. \n\na) Tidy up this data and save it to a tibble. Decide for yourself how to handle season 5 (should it be a single observation or two?). For the first and last aired dates, just store the year as a number.\n\nb) Save the tibble you created to a CSV file named \"breaking_bad.csv\".\n\n![](../img/breaking_bad_wikipedia.png)\n\n<p><details>\n<summary>Click here for the answer key</summary><blockquote>\n\n**Answer (a)**\n\nVersion with one observation for the season five parts\n\n\n::: {.cell hash='Day1B_Practice_cache/html/unnamed-chunk-5_4754f30e66d1f957968bac2931b9bc4d'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nseason <- c(1, 2, 3, 4, 5)\nepisodes <- c(7, 13, 13, 13, 16)\nfirst_air <- c(2008, 2009, 2010, 2011, 2012)\nlast_air <- c(2008, 2009, 2010, 2011, 2013)\nnetwork <- \"AMC\"\nbreaking_bad <- \n  tibble(season, episodes, first_air, last_air, network)\nbreaking_bad\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"season\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"episodes\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"first_air\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"last_air\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"network\"],\"name\":[5],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"1\",\"2\":\"7\",\"3\":\"2008\",\"4\":\"2008\",\"5\":\"AMC\"},{\"1\":\"2\",\"2\":\"13\",\"3\":\"2009\",\"4\":\"2009\",\"5\":\"AMC\"},{\"1\":\"3\",\"2\":\"13\",\"3\":\"2010\",\"4\":\"2010\",\"5\":\"AMC\"},{\"1\":\"4\",\"2\":\"13\",\"3\":\"2011\",\"4\":\"2011\",\"5\":\"AMC\"},{\"1\":\"5\",\"2\":\"16\",\"3\":\"2012\",\"4\":\"2013\",\"5\":\"AMC\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nVersion with two separate observations for the season five parts\n\n\n::: {.cell hash='Day1B_Practice_cache/html/unnamed-chunk-6_2408aaff54ceb030f094b9a1e15eb45f'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nseason <- c(1, 2, 3, 4, 5.1, 5.2)\nepisodes <- c(7, 13, 13, 13, 8, 8)\nfirst_air <- c(2008, 2009, 2010, 2011, 2012, 2013)\nlast_air <- c(2008, 2009, 2010, 2011, 2012, 2013)\nnetwork <- \"AMC\"\nbreaking_bad <- \n  tibble(season, episodes, first_air, last_air, network)\nbreaking_bad\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"season\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"episodes\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"first_air\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"last_air\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"network\"],\"name\":[5],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"1.0\",\"2\":\"7\",\"3\":\"2008\",\"4\":\"2008\",\"5\":\"AMC\"},{\"1\":\"2.0\",\"2\":\"13\",\"3\":\"2009\",\"4\":\"2009\",\"5\":\"AMC\"},{\"1\":\"3.0\",\"2\":\"13\",\"3\":\"2010\",\"4\":\"2010\",\"5\":\"AMC\"},{\"1\":\"4.0\",\"2\":\"13\",\"3\":\"2011\",\"4\":\"2011\",\"5\":\"AMC\"},{\"1\":\"5.1\",\"2\":\"8\",\"3\":\"2012\",\"4\":\"2012\",\"5\":\"AMC\"},{\"1\":\"5.2\",\"2\":\"8\",\"3\":\"2013\",\"4\":\"2013\",\"5\":\"AMC\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n**Answer (b)**\n\n\n::: {.cell hash='Day1B_Practice_cache/html/unnamed-chunk-7_a3688f177634466580d3341305c05500'}\n\n```{.r .cell-code}\nwrite_csv(breaking_bad, \"breaking_bad.csv\")\n```\n:::\n\n\n\n</blockquote></details></p>\n\n## Resources\n-   [R4DS Chapter 14](https://r4ds.had.co.nz/strings.html): Read more about strings\n\n-   [Broman & Woo (2018)](https://www.tandfonline.com/doi/full/10.1080/00031305.2017.1375989): Read more about tidy data principles\n\n-   [R4DS Chapter 10](https://r4ds.had.co.nz/tibbles.html): Read more about tibbles and data frames\n\n-   [R4DS Chapter 11](https://r4ds.had.co.nz/data-import.html): Read more about data reading and writing\n\n## Fun Stuff\n\n### \"Who's\" on First?\n\nA lesson about the importance of strings...\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/2ZksQd2fC6Y\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n### Fundamentals of Tidying\n\nShe doesn't like formatting-as-data either...\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/bjUlC8aEb7s\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}