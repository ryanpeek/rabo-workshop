{
  "hash": "25d6a043429f8b36ee0fe65366562120",
  "result": {
    "markdown": "---\nformat: \n  revealjs:\n    css: ../styles.css\n    slide-number: true\n    show-slide-number: all\n    preview-links: auto\n    self-contained: true\n    progress: true\n    history: true\n    hash-type: number\n    theme: default\n    code-block-background: true\n    highlight-style: zenburn\n    code-link: false\n    code-copy: true\n    pagetitle: \"R4SS Day 1A\"\n    author-meta: \"Jeffrey Girard\"\n    date-meta: \"2022-07-25\"\n---\n\n\n::: {.my-title}\n# [Introduction to R]{.blue} <br />for Social Scientists\n\n::: {.my-grey}\n[Workshop Day 1A | 2022-07-25]{}<br />\n[Jeffrey M. Girard | Pitt Methods]{}\n:::\n\n![](../img/proud_coder_357EDD.svg){.absolute bottom=0 right=0 width=400}\n:::\n\n<!-- Overview -->\n\n# Overview\n\n## Instructor {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"30%\"}\n::: {.tc}\n![](../img/Girard_500x500.jpg){.br-100}\n\n**Jeffrey Girard**, PhD<br /> [www.jmgirard.com](https://www.jmgirard.com)<br /> [jmgirard\\@ku.edu](mailto:jmgirard@ku.edu)\n:::\n:::\n\n::: {.column width=\"10%\"}\n:::\n\n::: {.column width=\"60%\"}\n::: {.fragment}\n#### Background\n\n-   [Assistant Professor]{.b .green}, *University of Kansas*\n-   Research Postdoc, *Carnegie Mellon University*\n-   PhD Student, *University of Pittsburgh*\n:::\n::: {.fragment .mt1}\n#### Research Areas\n\n-   Psychological Assessment\n-   Affective/Interpersonal Communication\n-   Applied [Statistics]{.b .green} and Machine Learning\n-   [Data Science]{.b .green} and Software Engineering\n:::\n:::\n:::\n\n::: footer\n\\[1A\\] Overview\n:::\n\n## R Rationale {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n1.  Think of your [computer]{.b .blue} as the [engine]{.b .green} of a car\n    -   It provides raw power for computation\n\n::: {.fragment .mt1}\n2.  The [R language]{.b .blue} is like the [controls]{.b .green} for the car\n    -   It lets you apply and direct that power\n:::\n\n::: {.fragment .mt1}\n3.  [RStudio]{.b .blue} is like a fancy [dashboard]{.b .green} for the car\n    -   It adds extra information and convenience\n:::\n\n::: {.fragment .mt1}\n4.  An [R package]{.b .blue} is like an [add-on]{.b .green} for the car\n    -   It adds new features and capabilities\n:::\n:::\n\n::: {.column .tc .pv5 .relative width=\"40%\"}\n\n{{< li zvoyghpz trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n::: footer\n\\[1A\\] Overview\n:::\n\n## Workshop Goals {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n-   This is a beginner-friendly workshop aimed at social scientists with little to no experience in R\n\n::: {.fragment .mt1}\n-   My goal this week is to \"[teach you how to drive]{.b .blue}\"\n:::\n\n::: {.fragment .mt1}\n-   Through [lectures]{.b .green} and [live coding]{.b .green}, you will learn the fundamentals of programming, data wrangling, visualization, and modeling in R\n:::\n\n::: {.fragment .mt1}\n-   Through hands-on [exercises]{.b .green}, you will gain confidence in your skills and ability to learn\n:::\n\n::: {.fragment .mt1}\n-   I will help you get your \"driver's license\" but you will need to practice to become a pro\n:::\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li avjivnej trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n::: footer\n\\[1A\\] Overview\n:::\n\n## Workshop Roadmap {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n<table id=\"roadmap\" width=\"100%\">\n  <tr>\n    <th>DAY 1A</th>\n    <th>DAY 2A</th>\n    <th>DAY 3A</th>\n  </tr>\n  <tr>\n    <td>Overview</td>\n    <td>[Wrangle II]{.green}</td>\n    <td>[Model I]{.red}</td>\n  </tr>\n  <tr>\n    <td>[Program I]{.blue}</td>\n    <td>[Program III]{.blue}</td>\n    <td>[Practice V]{.red}</td>\n  </tr>\n  <tr>\n    <td>Practice I</td>\n    <td>Practice III</td>\n    <td></td>\n  </tr>\n  <tr>\n    <th style=\"padding-top:1.75rem;\">DAY 1B</th>\n    <th>DAY 2B</th>\n    <th>DAY 3B</th>\n  </tr>\n  <tr>\n    <td>[Program II]{.blue}</td>\n    <td>[Wrangle III]{.green}</td>\n    <td>[Model II]{.red}</td>\n  </tr>\n  <tr>\n    <td>[Wrangle I]{.green}</td>\n    <td>[Visualize I/II]{.light-purple}</td>\n    <td>Practice VI</td>\n  </tr>\n  <tr>\n    <td>Practice II</td>\n    <td>Practice IV</td>\n    <td>Consulting</td>\n  </tr>\n</table>\n:::\n\n::: {.column .tc .pv4 width=\"40%\"}\n\n{{< li xtkehzkm trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n::: footer\n\\[1A\\] Overview\n:::\n\n## Workshop Etiquette {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n#### [Things to Do]{.green}\n\n-   Behave respectfully and with patience\n-   Ask for help in chat or \"raise hand\"\n-   Turn your camera on or off as desired\n-   Come and go from workshop as needed\n\n::: {.fragment .mt1}\n#### [Things Not to Do]{.red}\n\n-   Don't disparage yourself or others\n-   Don't stay confused for too long\n-   Don't unmute yourself when not talking\n-   Don't re-sell the workshop materials\n:::\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li syzdvjlt trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n::: footer\n\\[1A\\] Overview\n:::\n\n## Installing R {.smaller}\n\n::: {.columns .pv4}\n::: {.column .pr4 width=\"50%\"}\n#### Windows\n\n1.  Open a web browser\n2.  Visit [cloud.r-project.org](https://cloud.r-project.org)\n3.  Click \"Download R for Windows\"\n4.  Click the \"base\" subdirectory link\n5.  Click \"Download R-4.X.X\" (e.g., 4.2.1)\n6.  Run the downloaded .exe file\n7.  Select all the default options\n8.  Complete the installation wizard\n:::\n\n::: {.column width=\"50%\"}\n#### Mac OS\n\n1.  Open a web browser\n2.  Visit [cloud.r-project.org](https://cloud.r-project.org)\n3.  Click \"Download R for macOS\"\n4.  Click \"R-4.X.X.pkg\" (e.g., 4.2.1)\n5.  Run the downloaded .pkg file\n6.  Select all the default options\n7.  Complete the installation wizard\n:::\n:::\n\n::: aside\n*Note.* You will need to repeat this process every time a new version of R is released.\n:::\n\n::: footer\n\\[1A\\] Overview\n:::\n\n## Installing RStudio {.smaller}\n\n::: {.columns .pv4}\n::: {.column .pr4 width=\"50%\"}\n#### Windows\n\n1.  Open a web browser\n2.  Visit [rstudio.com/download](https://www.rstudio.com/products/rstudio/download/){preview-link=\"false\"}\n3.  Scroll down until you find the table under the \"**All Installers**\" section\n4.  Find the row for \"Windows 10/11\"\n5.  Click \"RStudio-2022.XX.X-XXX.exe\"\n6.  Run the downloaded .exe file\n7.  Select all the default options\n8.  Complete the installation wizard\n:::\n\n::: {.column width=\"50%\"}\n#### Mac OS\n\n1.  Open a web browser\n2.  Visit [rstudio.com/download](https://www.rstudio.com/products/rstudio/download/){preview-link=\"false\"}\n3.  Scroll down until you find the table under the \"**All Installers**\" section\n4.  Find the row for \"macOS 10.15+\"\n5.  Click \"RStudio-2022.XX.X-XXX.dmg\"\n6.  Run the downloaded .dmg file\n7.  Drag the RStudio icon to your Applications folder (if you want)\n:::\n:::\n\n::: aside\n*Note.* You will need to repeat this process every time a new version of RStudio is released.\n:::\n\n::: footer\n\\[1A\\] Overview\n:::\n\n## RStudio Window {.smaller}\n\n::: {.pv4}\n![](../img/rstudio_labels.jpg)\n:::\n\n::: aside\n*Note.* You can customize RStudio (e.g., the fonts, color themes, and pane layout) under \"Tools \\> Global Options\".\n:::\n\n::: footer\n\\[1A\\] Overview\n:::\n\n## File Management {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n-   [Projects]{.b .blue} are [special folders]{.b .green} on your computer\n    -   They contain all files related to a task\n    -   They keep everything together and organized\n\n::: {.fragment .mt1}\n-   Projects make it easy to [find and use your files]{.b .green}\n    -   No need to specify long, annoying file paths\n    -   No need to worry about working directories\n:::\n\n::: {.fragment .mt1}\n-   Projects make it easy to [switch between tasks]{.b .green}\n    -   They will remember exactly where you left off\n    -   You can even open multiple projects at once\n:::\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li jzzxeaju trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n::: {.aside}\n*Note.* Save your project in a cloud service folder (e.g., Box, Dropbox, Google Drive, OneDrive) to backup and sync it.\n:::\n\n::: footer\n\\[1A\\] Overview\n:::\n\n## Projects Live Coding\n\n::: {.instructions}\n    # Create a new Project\n    - Open the \"File\" menu in RStudio\n    - Select the \"New Project...\" option\n    - Select the \"New Directory\" option\n    - Select the \"New Project\" option\n    - Name the directory \"R4SS\" (or whatever)\n    - Browse to where to create your Project folder\n\n    # Create a new File\n    - Explore the Files tab in the Extras pane\n    - Create a New Blank File (e.g., a text file) as an example\n    - RStudio will automatically create it in your project folder\n    - Add some text to the example file (e.g., \"Hello World\")\n    - Close the text file with the \"x\" icon\n    - Reopen the text file from the Files tab\n\n    # Close and Open Project\n    - Open the \"File\" menu in RStudio\n    - Select the \"Close Project\" option\n    - Notice that your work is now gone\n    - Open the \"File\" menu in RStudio\n    - Select the \"Open Project\" option\n    - Browse to your project folder\n    - Open the R4SS.Rproj file\n    - Notice that your work is now back!\n:::\n\n::: footer\n\\[1A\\] Overview\n:::\n\n<!-- Program I -->\n\n# Program I\n\n## R will Grant your Wishes {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n-   R is like a [well-meaning]{.b .green} but [overly literal]{.b .green} genie\n\n    -   It has the power to grant almost any wish\n    -   But we must phrase our wishes carefully!\n    -   *We will always get what we ask for...*\n    -   *...but not always what we wanted.*\n\n::: {.fragment .mt1}\n-   Mastering the [R language]{.b .blue} means learning...\n\n    -   How to properly phrase commands\n    -   How to decipher error messages\n    -   How to view code from R's perspective\n    -   How to detect and correct small mistakes\n:::\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li njhpxsof trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n::: footer\n\\[1A\\] Program I\n:::\n\n## Communicating with R {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n-   The [Console]{.b .blue} is like a [chat window]{.b .green} with R\n    -   You send a command to R and get a response\n    -   Neither side of the conversation is saved\n\n::: {.fragment .mt1}\n-   A [Script]{.b .blue} is like an [email thread]{.b .green} with R\n    -   You send many commands to R all at once\n    -   Only your side of the conversation is saved\n:::\n\n::: {.fragment .mt1}\n-   [RMarkdown]{.b .blue} is like a [scrapbook]{.b .green} with R\n    -   You can combine code and formatted text\n    -   Both sides of the conversation are saved\n:::\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li zpxybbhl trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n::: footer\n\\[1A\\] Program I\n:::\n\n## Console Live Coding\n\n\n::: {.cell hash='r4ss_day1a_cache/revealjs/unnamed-chunk-1_cd03416d8fc4bdd952af2a27e69ee783'}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# Addition\n\n10+3\n10 + 3 # spaces are optional but recommended\n\n\n# Subtraction\n\n10 - 3\n\n\n# Multiplication\n\n10 * 3 # correct\n10 x 3 # error\n\n\n# Division\n\n10 / 3 # correct\n10 \\ 3 # error\n\n\n# Exponentiation\n\n10 ^ 2\n\n\n# Order of Operations\n\n10 + 3 * 2\n(10 + 3) * 2\n\n\n# Negative Numbers\n\n10 + -30\n\n\n# Decimals and Fractions\n\n1.234\n(1 / 3)\n\n\n# Leading and Trailing Zeros\n\n09.870\n\n\n# Large Numbers\n\n9876543 # correct\n9,876,543 # error\n9 876 543 # error\n```\n:::\n\n\n::: footer\n\\[1A\\] Program I\n:::\n\n## RMarkdown Live Coding\n\n::: {.instructions}\n    # Create an RMarkdown Document\n    - Open the \"File\" menu in RStudio\n    - Select the \"New File\" option\n    - Select the \"R Markdown...\" option\n    - Keep the defaults (HTML Document) and hit \"Ok\"\n    - Open the \"File\" menu\n    - Select the \"Save\" option\n    - Note that it defaults to the project folder\n    - Give it a name like \"Day 1A\" (or whatever)\n    - Note that the file extension is .Rmd\n\n    # Remove the boilerplate content\n    - The top part of the notebook is called the \"Header\"\n    - Don't delete the header or the notebook won't work\n    - You can change the title but keep it in quotes\n    - Highlight and delete everything below the header\n    \n    # Enter the Visual Editor\n    - Click on the \"Visual\" button at the top\n    - Check the box for \"Knit on Save\"\n    - Save by clicking the disk icon\n    - Look at the preview in the \"Viewer\" tab\n\n    # Add Formatted Text (i.e., Markdown)\n    - Below the header you can add formatted text\n    - Use the visual editor to add formatting easily\n    - Show how to add bold, italics, headers, etc.\n    - Mention that you can add links, figures, and tables too\n\n    # Add R Chunks (i.e., R code)\n    - Click the green \"Insert a new code chunk\" button (top right)\n    - Show how you can also do this quickly by typing / in Visual editor\n    - Inside the chunk, you can type R commands like a mini console\n    - Try doing some calculations in the chunk and hit the green arrow\n    - The answer appears right below the chunk!\n    - If we save and knit the document, it appears there too\n    - We can share the .html file with others\n    - It will include all the formatted text, code, and R's answers\n:::\n\n::: footer\n\\[1A\\] Program I\n:::\n\n## Assignment {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n-   It is often useful to store data in [named objects]{.b .green}\n    -   This makes the data easier to use and re-use\n    -   This makes the code easier to write and read\n\n::: {.fragment .mt1}\n-   Which command is easier to follow?\n    1.  Dial *7 8 5 8 6 4 0 8 4 1*\n    2.  Call *Office Phone*\n:::\n\n::: {.fragment .mt1}\n-   Named objects are created using [assignment]{.b .blue}\n    -   Give a **name** then an **arrow** then the **data**\n:::\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li mgtgkkcb trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n\n::: {.fragment}\n`office <- 7858640841`\n:::\n:::\n:::\n\n::: footer\n\\[1A\\] Program I\n:::\n\n## Assignment Live Coding\n\n\n::: {.cell hash='r4ss_day1a_cache/revealjs/unnamed-chunk-2_cc50eb8a5412f4cbfff2af5cc0cbdabd'}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# LESSON: Assigning and printing\n\nx <- 2\nx\n\n# ==============================================================================\n\n# USECASE: Using an object in math (a la algebra) \n\nx * 4\n\n2 * 4\n\n# ==============================================================================\n\n# LESSON: You must use assignment to update an object\n\nx\n\nx + 1\n\nx # still 2\n\nx <- x + 1\nx # updated to 3\n\n# ==============================================================================\n\n# USECASE: We can use the same object multiple times in a line\n\n(10 + x - 1) / x\n\n# ==============================================================================\n\n# USECASE: We can also use an object to create another object\n\ny <- 10 + x\ny\n\n# ==============================================================================\n\n# USECASE: We can also use multiple objects in a line\n\ny / x\n```\n:::\n\n\n::: footer\n\\[1A\\] Program I\n:::\n\n## Naming {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n-   Object names can [only include]{.b .blue}:\n    -   Letters: `a-Z`\n    -   Numbers: `0-9`\n    -   Underscores: `_`\n    -   Periods: `.`\n\n::: {.fragment .mt1}\n-   Additional Rules:\n    -   Must [start with a letter or period]{.b .blue}\n    -   Cannot contain spaces or dashes\n    -   Cannot contain other symbols\n    -   Names are case-sensitive (`age` ≠ `Age`)\n:::\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li efdggetp trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n::: footer\n\\[1A\\] Program I\n:::\n\n## Naming Live Coding\n\n\n::: {.cell hash='r4ss_day1a_cache/revealjs/unnamed-chunk-3_70045b91fe71853e10e38f95efb6416e'}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# LESSON: Good names are a balancing act\n\nx <- 93 # what is it?\n\nrate <- 93 # too short\n\nheart_rate_in_beats_per_minute <- 93 # too long\n\nheart_rate_bpm <- 93 # just right\n\n# ==============================================================================\n\n# PITFALL: Don't try to include spaces or dashes in names\n\nheart rate <- 93 # error\n\nheart-rate <- 93 # error\n\n# ==============================================================================\n\n# PITFALL: Don't try to include special symbols\n\nage@time2 <- 12 # error\n\nage_time2 <- 12 # correct\n\n# ==============================================================================\n\n# PITFALL: Don't try to put a number or underscore first\n\nheart_rate_1 <- 93 # correct\n\n1_heart_rate <- 93 # error\n\n_heart_rate <- 93 # error\n\n# ==============================================================================\n\n# LESSON: Object names are case-sensitive\n\nheart_rate <- 93\n\nHeart_rate <- 88\n\nheart_rate # still 93\n\nHeart_rate # a new object\n```\n:::\n\n\n::: footer\n\\[1A\\] Program I\n:::\n\n# [Practice I](https://pittmethods.github.io/r4ss/Day_1/Day1A_Practice.html){preview-link=\"false\"}\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}